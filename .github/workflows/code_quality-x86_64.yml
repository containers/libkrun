name: linux-x86_64
on: [pull_request, create]

jobs:
  build:
    if: github.event_name == 'pull_request'
    name: Code Quality (fmt, clippy, clang-format)
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt, clippy

      - name: Install packages
        run: sudo apt-get update && sudo apt-get install -y libvirglrenderer-dev libepoxy-dev libdrm-dev libpipewire-0.3-dev clang-format

      - name: Formatting (clang-format)
        run: find init -iname '*.h' -o -iname '*.c' | xargs clang-format -n -Werror

      - name: Create a fake init
        run: touch init/init

      - name: Formatting (rustfmt)
        run: cargo fmt -- --check

      - name: Clippy (default features)
        run: cargo clippy -- -D warnings

      - name: Clippy (amd-sev feature)
        run: cargo clippy --features amd-sev -- -D warnings

      - name: Clippy (net+blk+gpu+snd features)
        run: cargo clippy --features net,blk,gpu,snd -- -D warnings

  unit:
    if: github.event_name == 'pull_request'
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt, clippy

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo usermod -a -G kvm $USER

      - name: Install packages
        run: sudo apt-get update && sudo apt-get install -y libvirglrenderer-dev libepoxy-dev libdrm-dev libpipewire-0.3-dev

      - name: Create a fake init
        run: touch init/init

      - name: Unit tests
        run: cargo test

  integration:
    if: github.event_name == 'pull_request'
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: x86_64-unknown-linux-musl

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo usermod -a -G kvm $USER

      - name: Install packages
        run: sudo apt-get update && sudo apt-get install -y build-essential patchelf libclang-dev pkg-config net-tools libvirglrenderer-dev libepoxy-dev libdrm-dev libpipewire-0.3-dev

      - name: Install libkrunfw
        run: curl -L -o /tmp/libkrunfw-4.9.0-x86_64.tgz https://github.com/containers/libkrunfw/releases/download/v4.9.0/libkrunfw-4.9.0-x86_64.tgz && mkdir tmp && tar xf /tmp/libkrunfw-4.9.0-x86_64.tgz -C tmp && sudo mv tmp/lib64/* /lib/x86_64-linux-gnu

      - name: Integration tests
        run: KRUN_NO_UNSHARE=1 make test
